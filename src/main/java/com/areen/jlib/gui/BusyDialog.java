/**
 * $Id$
 *
 * Copyright (c) 2009-2014 Areen Design Services Ltd
 * 23 Eyot Gardens; London; W6 9TR
 * http://www.areen.com
 * All rights reserved.
 * 
 * This software is the confidential and proprietary information of Areen Design Services Ltd ("Confidential 
 * Information").  You shall not disclose such Confidential Information and shall use it only in accordance 
 * with the terms of the license agreement you entered into with Areen Design Services Ltd.
 * 
 * This file is best viewed with 110 columns.
12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
 * 
 * Author(s) in chronological order:
 *   Mateusz Dykiert
 * Contributor(s):
 *   -
 */
package com.areen.jlib.gui;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.Frame;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JDialog;
import javax.swing.SwingWorker;
import javax.swing.border.EmptyBorder;
import org.jdesktop.swingx.JXBusyLabel;

/**
 * BusyDialog - a dialog which should be displayed when we do some lengthy task and want 
 * to show to the user that the application is not just simply hanging
 * 
 * @author Matthew
 */
public class BusyDialog extends JDialog  implements PropertyChangeListener {
    private SwingWorker worker;
    
    /**
     * Creates new form BusyDialog
     * @param parent
     * @param text
     */
    public BusyDialog(Frame parent, String text, SwingWorker argWorker) {
        super(parent, true);
        worker = argWorker;
        
        setUndecorated(true);
        setAlwaysOnTop(true);
        setLocationRelativeTo(parent);
        initComponents();
        JXBusyLabel busyLabel = new JXBusyLabel();
        busyLabel.setText(text);
        add(busyLabel, BorderLayout.CENTER);
        busyLabel.setBusy(true);
        busyLabel.setFont(new Font("Tahoma", Font.BOLD, 14));
        busyLabel.setBorder(new EmptyBorder(20, 20, 20, 20));
        pack();
    }

    public void propertyChange(PropertyChangeEvent event) {
        if ("state".equals(event.getPropertyName())
                && SwingWorker.StateValue.DONE == event.getNewValue()) {
            setVisible(false);
            dispose();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        worker.cancel(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
